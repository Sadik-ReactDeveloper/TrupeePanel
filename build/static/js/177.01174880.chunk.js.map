{"version":3,"sources":["views/apps/trade/AddGeneralNotif.js"],"names":["AddGeneralNotif","useState","title","setTitle","selectedImage","setSelectedImage","selectedEmoji","setSelectedEmoji","EditorState","createEmpty","editorState","setEditorState","className","render","history","onClick","push","onSubmit","e","preventDefault","console","log","data","FormData","append","draftToHtml","convertToRaw","getCurrentContent","axiosConfig","post","then","response","swal","catch","error","submitHandler","lg","md","sm","required","type","name","placeholder","value","onChange","target","accept","event","file","files","unified","emojiStyle","EmojiStyle","APPLE","size","onEmojiClick","emojiData","autoFocusSearch","NATIVE","height","toolbarClassName","wrapperClassName","editorClassName","onEditorStateChange","toolbar","options","inline","bold","italic","underline","strikethrough","code","blockType","fontSize","fontFamily","Ripple","color"],"mappings":"qXA2OeA,UA5Mf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0CF,mBAAS,MAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAA0CJ,mBAAS,IAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KAEA,EAAsCN,oBAAS,kBAC7CO,cAAYC,iBADd,mBAAOC,EAAP,KAAoBC,EAApB,KAwCA,OACE,oCACE,6BAgBE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,UAAU,OACb,kBAAC,IAAD,KACE,wBAAIA,UAAU,cAAd,6BAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,OAAQ,gBAAGC,EAAH,EAAGA,QAAH,OACN,kBAAC,IAAD,CACEF,UAAU,8BACVG,QAAS,kBAAMD,EAAQE,KAAK,iCAF9B,aAUR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMJ,UAAU,MAAMK,SAAU,SAACC,GAAD,OAjEpB,SAACA,GACrBA,EAAEC,iBACFC,QAAQC,IAAIf,GACZ,IAAIgB,EAAO,IAAIC,SACfD,EAAKE,OAAO,QAAStB,GACrBoB,EAAKE,OAAO,QAASlB,GACrBgB,EAAKE,OACH,OACAC,IAAYC,uBAAahB,EAAYiB,uBAEjB,OAAlBvB,GACFkB,EAAKE,OAAO,MAAOpB,GAErBwB,IACGC,KAAK,0BAA2BP,GAChCQ,MAAK,SAACC,GACLX,QAAQC,IAAIU,EAAST,KAAKA,MAC1BU,IAAK,WAAY,yBAA0B,cAE5CC,OAAM,SAACC,GACNd,QAAQC,IAAIa,MA6C+BC,CAAcjB,KACnD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKkB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAI1B,UAAU,QAClC,kBAAC,IAAD,cACA,kBAAC,IAAD,CACE2B,UAAQ,EACRC,KAAK,OACLC,KAAK,QACLC,YAAY,QACZC,MAAOzC,EACP0C,SAAU,SAAC1B,GAAD,OAAOf,EAASe,EAAE2B,OAAOF,WAiBvC,kBAAC,IAAD,CAAKP,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAI1B,UAAU,QAClC,kBAAC,IAAD,cACA,kBAAC,IAAD,CACE4B,KAAK,OACLC,KAAK,MACLK,OAAO,UACPF,SA3EQ,SAACG,GACzB,IAAMC,EAAOD,EAAMF,OAAOI,MAAM,GAChC7B,QAAQC,IAAI2B,GACZ3C,EAAiB2C,OA2EL,kBAAC,IAAD,CAAKZ,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAI1B,UAAU,QAClC,yBAAKA,UAAU,IACb,yBAAKA,UAAU,cAAf,0BAEGN,EACC,kBAAC,IAAD,CACE4C,QAAS5C,EACT6C,WAAYC,IAAWC,MACvBC,KAAM,KAEN,MAEN,6BACE,kBAAC,IAAD,CACEC,aAxHtB,SAAqBC,EAAWT,GAE9BxC,EAAiBiD,EAAUN,UAuHPO,iBAAiB,EACjBN,WAAYC,IAAWM,OACvBC,OAAO,aAKf,kBAAC,IAAD,CAAKvB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAI1B,UAAU,QAClC,kBAAC,SAAD,CACEgD,iBAAiB,wBACjBC,iBAAiB,eACjBC,gBAAgB,cAChBpD,YAAaA,EACbqD,oBA1IU,SAACrD,GAC3B,OAAOC,EAAeD,IA0INsD,QAAS,CACPC,QAAS,CACP,SACA,YACA,WACA,cAEFC,OAAQ,CACND,QAAS,CACP,OACA,SACA,YACA,gBACA,aAEFE,KAAM,CAAEvD,UAAW,6BACnBwD,OAAQ,CAAExD,UAAW,6BACrByD,UAAW,CAAEzD,UAAW,6BACxB0D,cAAe,CACb1D,UAAW,6BAEb2D,KAAM,CAAE3D,UAAW,8BAErB4D,UAAW,CACT5D,UAAW,6BAEb6D,SAAU,CACR7D,UAAW,6BAEb8D,WAAY,CACV9D,UAAW,kCAOrB,6BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKwB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAI1B,UAAU,QAClC,kBAAC,IAAO+D,OAAR,CACEC,MAAM,UACNpC,KAAK,SACL5B,UAAU,aAHZ,qC","file":"static/js/177.01174880.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  CustomInput,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { Route } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport EmojiPicker, {\r\n  EmojiStyle,\r\n  Emoji,\r\n  // SkinTones,\r\n  // Theme,\r\n  // Categories,\r\n  // EmojiClickData,\r\n  // SuggestionMode,\r\n  // SkinTonePickerLocation,\r\n} from \"emoji-picker-react\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { EditorState, RichUtils, convertToRaw } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../assets/scss/plugins/extensions/editor.scss\";\r\nfunction AddGeneralNotif() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [selectedEmoji, setSelectedEmoji] = useState(\"\");\r\n  // const [url, setUrl] = useState(\"\");\r\n  const [editorState, setEditorState] = useState(() =>\r\n    EditorState.createEmpty()\r\n  );\r\n  const onEditorStateChange = (editorState) => {\r\n    return setEditorState(editorState);\r\n  };\r\n\r\n  function handleEmoji(emojiData, event) {\r\n    // console.log(emojiData.emoji,);\r\n    setSelectedEmoji(emojiData.unified);\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(selectedEmoji);\r\n    let data = new FormData();\r\n    data.append(\"title\", title);\r\n    data.append(\"emoji\", selectedEmoji);\r\n    data.append(\r\n      \"desc\",\r\n      draftToHtml(convertToRaw(editorState.getCurrentContent()))\r\n    );\r\n    if (selectedImage !== null) {\r\n      data.append(\"img\", selectedImage);\r\n    }\r\n    axiosConfig\r\n      .post(\"/admin/add_notification\", data)\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const handleImageChange = (event) => {\r\n    const file = event.target.files[0];\r\n    console.log(file);\r\n    setSelectedImage(file);\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        {/* <Row>\r\n          <Col sm=\"12\">\r\n            <div>\r\n              <Breadcrumb listTag=\"div\">\r\n                <BreadcrumbItem href=\"/analyticsDashboard\" tag=\"a\">\r\n                  Home\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem href=\"/app/trade/generalNotifList\" tag=\"a\">\r\n                  General Notification List\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem active>Add General Notification</BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </Col>\r\n        </Row> */}\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 className=\"float-left\">Add General Notification</h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() => history.push(\"/app/trade/generalNotifList\")}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={(e) => submitHandler(e)}>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Title</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"Title\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                  ></Input>\r\n                </Col>\r\n                {/* <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>URL</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"url\"\r\n                    placeholder=\"Url\"\r\n                    value={url}\r\n                    onChange={(e) => {\r\n                      console.log(e.target.value);\r\n                      setUrl(e.target.value);\r\n                    }}\r\n                  ></Input>\r\n                </Col> */}\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Image</Label>\r\n                  <CustomInput\r\n                    type=\"file\"\r\n                    name=\"img\"\r\n                    accept=\"image/*\"\r\n                    onChange={handleImageChange}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <div className=\"\">\r\n                    <div className=\"show-emoji\">\r\n                      Your selected Emoji is:\r\n                      {selectedEmoji ? (\r\n                        <Emoji\r\n                          unified={selectedEmoji}\r\n                          emojiStyle={EmojiStyle.APPLE}\r\n                          size={22}\r\n                        />\r\n                      ) : null}\r\n                    </div>\r\n                    <div>\r\n                      <EmojiPicker\r\n                        onEmojiClick={handleEmoji}\r\n                        autoFocusSearch={false}\r\n                        emojiStyle={EmojiStyle.NATIVE}\r\n                        height=\"400px\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Editor\r\n                    toolbarClassName=\"demo-toolbar-absolute\"\r\n                    wrapperClassName=\"demo-wrapper\"\r\n                    editorClassName=\"demo-editor\"\r\n                    editorState={editorState}\r\n                    onEditorStateChange={onEditorStateChange}\r\n                    toolbar={{\r\n                      options: [\r\n                        \"inline\",\r\n                        \"blockType\",\r\n                        \"fontSize\",\r\n                        \"fontFamily\",\r\n                      ],\r\n                      inline: {\r\n                        options: [\r\n                          \"bold\",\r\n                          \"italic\",\r\n                          \"underline\",\r\n                          \"strikethrough\",\r\n                          \"monospace\",\r\n                        ],\r\n                        bold: { className: \"bordered-option-classname\" },\r\n                        italic: { className: \"bordered-option-classname\" },\r\n                        underline: { className: \"bordered-option-classname\" },\r\n                        strikethrough: {\r\n                          className: \"bordered-option-classname\",\r\n                        },\r\n                        code: { className: \"bordered-option-classname\" },\r\n                      },\r\n                      blockType: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                      fontSize: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                      fontFamily: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <br />\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Add General Notification\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddGeneralNotif;\r\n"],"sourceRoot":""}