{"version":3,"sources":["views/apps/pageSetUp/termscondition/EditTermCondition.js","../node_modules/reactstrap/es/Form.js"],"names":["EditTermCondition","props","onEditorStateChange","editorState","console","log","setState","desc","convertToRaw","getCurrentContent","changeHandler","e","target","name","value","submitHandler","preventDefault","id","match","params","axiosConfig","post","state","then","response","history","push","catch","error","EditorState","createEmpty","command","newState","RichUtils","handleKeyCommand","this","onChange","get","data","className","col-sm-6","render","onClick","onSubmit","toolbarClassName","wrapperClassName","editorClassName","toolbar","options","inline","bold","italic","underline","strikethrough","code","blockType","fontSize","fontFamily","color","React","Component","_excluded","propTypes","children","PropTypes","node","bool","tag","tagPropType","innerRef","oneOfType","object","func","string","cssModule","Form","_Component","_this","call","getRef","bind","_assertThisInitialized","submit","_inheritsLoose","_proto","prototype","ref","_this$props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/79.3b229dbc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardBody, Col, Row, Form, Button } from \"reactstrap\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { EditorState, convertToRaw, RichUtils } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../../assets/scss/plugins/extensions/editor.scss\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { history } from \"../../../../history\";\r\nimport swal from \"sweetalert\";\r\nimport { Route } from \"react-router-dom\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\n\r\nclass EditTermCondition extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      desc: \"\",\r\n      editorState: EditorState.createEmpty(),\r\n    };\r\n  }\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    console.log(editorState);\r\n    this.setState({\r\n      editorState,\r\n      // : convertToRaw(editorState.getCurrentContent()),\r\n      desc: convertToRaw(editorState.getCurrentContent()),\r\n    });\r\n  };\r\n  handleKeyCommand(command, editorState) {\r\n    const newState = RichUtils.handleKeyCommand(editorState, command);\r\n\r\n    if (newState) {\r\n      this.onChange(newState);\r\n      return \"handled\";\r\n    }\r\n\r\n    return \"not-handled\";\r\n  }\r\n  componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .get(`/admin/getone_term_cond/${id}`)\r\n      .then((response) => {\r\n        console.log(response.data.data.desc);\r\n        this.setState({\r\n          desc: response.data.data.desc,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let { id } = this.props.match.params;\r\n    console.log(id);\r\n    axiosConfig\r\n      .post(`/admin/edit_term_cond/${id}`, this.state)\r\n      .then((response) => {\r\n        console.log(response);\r\n        // swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        this.props.history.push(\r\n          `/app/pageSetUp/termscondition/TermConditionList`\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n    return (\r\n      <Card>\r\n        <Row className=\"m-2\">\r\n          <Col>\r\n            <h1 col-sm-6 className=\"float-left\">\r\n              Edit Term And Condition\r\n            </h1>\r\n          </Col>\r\n          <Col>\r\n            <Route\r\n              render={({ history }) => (\r\n                <Button\r\n                  className=\" btn btn-danger float-right\"\r\n                  onClick={() =>\r\n                    history.push(\r\n                      \"/app/pageSetUP/termscondition/TermConditionList\"\r\n                    )\r\n                  }\r\n                >\r\n                  Back\r\n                </Button>\r\n              )}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <CardBody>\r\n          <Form onSubmit={this.submitHandler}>\r\n            {/* <Editor\r\n  editorState={this.state.editorState}\r\n  toolbarClassName=\"toolbarClassName\"\r\n  wrapperClassName=\"wrapperClassName\"\r\n  editorClassName=\"editorClassName\"\r\n  onEditorStateChange={this.onEditorStateChange}\r\n/>; */}\r\n\r\n            <Editor\r\n              editorState={editorState}\r\n              handleKeyCommand={this.handleKeyCommand}\r\n              onEditorStateChange={this.onEditorStateChange}\r\n              toolbarClassName=\"demo-toolbar-absolute\"\r\n              wrapperClassName=\"demo-wrapper\"\r\n              editorClassName=\"demo-editor\"\r\n              toolbar={{\r\n                options: [\"inline\", \"blockType\", \"fontSize\", \"fontFamily\"],\r\n                inline: {\r\n                  options: [\r\n                    \"bold\",\r\n                    \"italic\",\r\n                    \"underline\",\r\n                    \"strikethrough\",\r\n                    \"monospace\",\r\n                  ],\r\n                  bold: { className: \"bordered-option-classname\" },\r\n                  italic: { className: \"bordered-option-classname\" },\r\n                  underline: { className: \"bordered-option-classname\" },\r\n                  strikethrough: { className: \"bordered-option-classname\" },\r\n                  code: { className: \"bordered-option-classname\" },\r\n                },\r\n                blockType: {\r\n                  className: \"bordered-option-classname\",\r\n                },\r\n                fontSize: {\r\n                  className: \"bordered-option-classname\",\r\n                },\r\n                fontFamily: {\r\n                  className: \"bordered-option-classname\",\r\n                },\r\n              }}\r\n            />\r\n            <br />\r\n            <Button color=\"primary\">Submit</Button>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default EditTermCondition;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"];\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;"],"sourceRoot":""}