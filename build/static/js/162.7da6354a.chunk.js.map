{"version":3,"sources":["views/apps/premium/AddPaidService.js"],"names":["AddPaidServeice","props","onEditorStateChange","editorState","setState","desc","draftToHtml","convertToRaw","getCurrentContent","changeHandler","e","target","name","value","submitHandler","preventDefault","axiosConfig","post","state","then","response","console","log","history","push","swal","catch","error","title","EditorState","createEmpty","pack_nameM","get","data","onSubmit","this","toolbarClassName","wrapperClassName","editorClassName","toolbar","options","inline","bold","className","italic","underline","strikethrough","code","blockType","fontSize","fontFamily","color","React","Component"],"mappings":"wVAsBMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAwBRC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CACZD,cACAE,KAAMC,IAAYC,uBAAaJ,EAAYK,yBA5B5B,EA+BnBC,cAAgB,SAACC,GACf,EAAKN,SAAL,eAAiBM,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,SAhCzB,EAkCnBC,cAAgB,SAACJ,GACfA,EAAEK,iBAEFC,IACGC,KAAK,uBAAwB,EAAKC,OAClCC,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ,EAAKnB,MAAMsB,QAAQC,KAAK,iCACxBC,IAAK,YAAa,0BAA2B,cAE9CC,OAAM,SAACC,GACNN,QAAQC,IAAIK,OA3ChB,EAAKT,MAAQ,CACXU,MAAO,GACPvB,KAAM,GACNF,YAAa0B,cAAYC,eAE3B,EAAKZ,MAAQ,CACXa,WAAY,IARG,E,qDAWnB,WAAqB,IAAD,OAElBf,IACGgB,IAAI,oBACJb,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ,EAAKhB,SAAS,CACZ2B,WAAYX,EAASa,KAAKA,UAG7BP,OAAM,SAACC,GACNN,QAAQC,IAAIK,Q,oBA2BlB,WACE,OACE,kBAAC,IAAD,KAoBE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMO,SAAUC,KAAKrB,eA0BnB,kBAAC,SAAD,CACEsB,iBAAiB,wBACjBC,iBAAiB,eACjBC,gBAAgB,cAChBnC,YAAagC,KAAKjB,MAAMf,YACxBD,oBAAqBiC,KAAKjC,oBAC1BqC,QAAS,CACPC,QAAS,CAAC,SAAU,YAAa,WAAY,cAC7CC,OAAQ,CACND,QAAS,CACP,OACA,SACA,YACA,gBACA,aAEFE,KAAM,CAAEC,UAAW,6BACnBC,OAAQ,CAAED,UAAW,6BACrBE,UAAW,CAAEF,UAAW,6BACxBG,cAAe,CAAEH,UAAW,6BAC5BI,KAAM,CAAEJ,UAAW,8BAErBK,UAAW,CACTL,UAAW,6BAEbM,SAAU,CACRN,UAAW,6BAEbO,WAAY,CACVP,UAAW,gCAIjB,6BACA,kBAAC,IAAD,CAAQQ,MAAM,WAAd,6B,GArIkBC,IAAMC,WA4IrBrD,a","file":"static/js/162.7da6354a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Row,\r\n  Form,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../assets/scss/plugins/extensions/editor.scss\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport swal from \"sweetalert\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nclass AddPaidServeice extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      desc: \"\",\r\n      editorState: EditorState.createEmpty(),\r\n    };\r\n    this.state = {\r\n      pack_nameM: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    //plan//\r\n    axiosConfig\r\n      .get(\"/admin/plan_list\")\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          pack_nameM: response.data.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n      desc: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n    });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    axiosConfig\r\n      .post(\"/admin/addPrmiumSrvc\", this.state)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.props.history.push(\"/app/premium/paidServeiceList\");\r\n        swal(\"Good job!\", \"You clicked the button!\", \"success\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card>\r\n        {/* <Row className=\"m-2\">\r\n          <Col>\r\n            <h1 col-sm-6 className=\"float-left\">\r\n              Add Paid Serveice\r\n            </h1>\r\n          </Col>\r\n          <Col>\r\n            <Route\r\n              render={({ history }) => (\r\n                <Button\r\n                  className=\" btn btn-danger float-right\"\r\n                  onClick={() => history.push(\"/app/premium/paidServiceList\")}\r\n                >\r\n                  Back\r\n                </Button>\r\n              )}\r\n            />\r\n          </Col>\r\n        </Row> */}\r\n        <CardBody>\r\n          <Form onSubmit={this.submitHandler}>\r\n            {/* <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n              <Label>Title</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                value={this.state.title}\r\n                onChange={this.changeHandler}\r\n              />\r\n            </Col> */}\r\n            {/* <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n              <Label>Membership plan</Label>\r\n              <CustomInput\r\n                type=\"select\"\r\n                name=\"planId\"\r\n                value={this.state.planId?.pack_name}\r\n                onChange={this.changeHandler}\r\n              >\r\n                <option>Select Plan</option>\r\n                {this.state.pack_nameM?.map((planmemship) => (\r\n                  <option value={planmemship?._id} key={planmemship?._id}>\r\n                    {planmemship?.pack_name}\r\n                  </option>\r\n                ))}\r\n              </CustomInput>\r\n            </Col> */}\r\n            <Editor\r\n              toolbarClassName=\"demo-toolbar-absolute\"\r\n              wrapperClassName=\"demo-wrapper\"\r\n              editorClassName=\"demo-editor\"\r\n              editorState={this.state.editorState}\r\n              onEditorStateChange={this.onEditorStateChange}\r\n              toolbar={{\r\n                options: [\"inline\", \"blockType\", \"fontSize\", \"fontFamily\"],\r\n                inline: {\r\n                  options: [\r\n                    \"bold\",\r\n                    \"italic\",\r\n                    \"underline\",\r\n                    \"strikethrough\",\r\n                    \"monospace\",\r\n                  ],\r\n                  bold: { className: \"bordered-option-classname\" },\r\n                  italic: { className: \"bordered-option-classname\" },\r\n                  underline: { className: \"bordered-option-classname\" },\r\n                  strikethrough: { className: \"bordered-option-classname\" },\r\n                  code: { className: \"bordered-option-classname\" },\r\n                },\r\n                blockType: {\r\n                  className: \"bordered-option-classname\",\r\n                },\r\n                fontSize: {\r\n                  className: \"bordered-option-classname\",\r\n                },\r\n                fontFamily: {\r\n                  className: \"bordered-option-classname\",\r\n                },\r\n              }}\r\n            />\r\n            <br />\r\n            <Button color=\"primary\"> Add Paid Serveice</Button>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default AddPaidServeice;\r\n"],"sourceRoot":""}