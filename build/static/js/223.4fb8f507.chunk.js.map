{"version":3,"sources":["views/apps/users/UsersList.js"],"names":["UsersList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","refral_Code","mobile","walletId","amount","value","status","render","history","color","size","onClick","push","_id","runthisfunction","allUserLis","axiosConfig","get","then","response","console","log","setState","onGridReady","gridApi","api","gridColumnApi","columnApi","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","this","id","swal","buttons","cancel","catch","text","sm","col-sm-6","tag","length","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/223.4fb8f507.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Button,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport swal from \"sweetalert\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { ChevronDown, Trash2, Eye, Edit } from \"react-feather\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nclass UsersList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n      },\r\n      {\r\n        headerName: \"Reffrel Code\",\r\n        field: \"refral_Code\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.refral_Code}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Mobile\",\r\n        field: \"mobile\",\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.mobile}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"WaslletID\",\r\n        field: \"walletid\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.walletId}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      // {\r\n      //   headerName: \"Verification\",\r\n      //   field: \"userverified\",\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <span>{params.data.userverified}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      {\r\n        headerName: \"Amount\",\r\n        field: \"amount\",\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.amount}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      // {\r\n      //   headerName: \"Membership plan\",\r\n      //   field: \"pack_name\",\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <span>{params.data.planId?.pack_name}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Start Date\",\r\n      //   field: \"date\",\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         {/* <span>{moment(params.data.createdAt).format(\"ll\")} </span> */}\r\n      //         <span>{params.data.date}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"status\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return params.value === \"Active\" ? (\r\n            <div className=\"badge badge-pill badge-success\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"Deactive\" ? (\r\n            <div className=\"badge badge-pill badge-warning\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : null;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        width: 120,\r\n        // pinned: window.innerWidth > 992 ? \"right\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Eye\r\n                    className=\"mr-50\"\r\n                    color=\"green\"\r\n                    size={20}\r\n                    onClick={() =>\r\n                      history.push(`/app/users/viewUsers/${params.data._id}`)\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    size=\"20px\"\r\n                    color=\"blue\"\r\n                    onClick={() =>\r\n                      history.push(`/app/users/editUsers/${params.data._id}`)\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n\r\n              <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  this.runthisfunction(params.data._id);\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  componentDidMount() {\r\n    this.allUserLis();\r\n  }\r\n  allUserLis = () => {\r\n    axiosConfig.get(\"/admin/getuser\").then((response) => {\r\n      let rowData = response.data.data;\r\n      console.log(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  };\r\n\r\n  runthisfunction(id) {\r\n    swal(\r\n      `Do You Want To Delete Permanently`,\r\n      \"This item will be deleted immediately\",\r\n\r\n      {\r\n        buttons: {\r\n          cancel: \"Cancel\",\r\n          catch: { text: \"Delete \", value: \"catch\" },\r\n        },\r\n      }\r\n    ).then((value) => {\r\n      switch (value) {\r\n        case \"cancel\":\r\n          swal(\"Sure Want to cancel it\");\r\n          break;\r\n        case \"catch\":\r\n          axiosConfig.get(`/admin/deletuser/${id}`).then((response) => {\r\n            this.allUserLis();\r\n          });\r\n          break;\r\n        default:\r\n          swal(\"Sure Want to cancel it\");\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\"></Col>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"m-2\">\r\n              <Col>\r\n                <h1 col-sm-6 className=\"float-left\">\r\n                  All Users List\r\n                </h1>\r\n              </Col>\r\n            </Row>\r\n\r\n            <CardBody className=\"py-0\">\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"search...\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {(context) => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default UsersList;\r\n"],"sourceRoot":""}