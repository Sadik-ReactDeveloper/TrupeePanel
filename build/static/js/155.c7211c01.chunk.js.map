{"version":3,"sources":["views/apps/trade/notification/EditNotification.js"],"names":["EditNotification","props","onEditorStateChange","editorState","console","log","setState","desc","draftToHtml","convertToRaw","getCurrentContent","changeHandler","e","target","name","value","submitHandler","preventDefault","id","match","params","axiosConfig","post","state","then","response","swal","catch","error","data","EditorState","createEmpty","command","newState","RichUtils","handleKeyCommand","this","onChange","get","className","col-sm-6","render","history","onClick","push","onSubmit","lg","md","sm","required","type","placeholder","toolbarClassName","wrapperClassName","editorClassName","toolbar","options","inline","bold","italic","underline","strikethrough","code","blockType","fontSize","fontFamily","color","React","Component"],"mappings":"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","file":"static/js/155.c7211c01.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Row,\r\n  Form,\r\n  Button,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { EditorState, convertToRaw, RichUtils } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n// import \"../../../../assets/scss/plugins/extensions/editor.scss\";\r\nimport \"../../../../assets/scss/plugins/extensions/editor.scss\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { history } from \"../../../../history\";\r\nimport swal from \"sweetalert\";\r\nimport { Route } from \"react-router-dom\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\n\r\nclass EditNotification extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      desc: \"\",\r\n      editorState: EditorState.createEmpty(),\r\n    };\r\n  }\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    console.log(editorState);\r\n\r\n    this.setState({\r\n      editorState,\r\n      // desc: convertToRaw(editorState.getCurrentContent()),\r\n      desc: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n    });\r\n  };\r\n  handleKeyCommand(command, editorState) {\r\n    const newState = RichUtils.handleKeyCommand(editorState, command);\r\n\r\n    if (newState) {\r\n      this.onChange(newState);\r\n      return \"handled\";\r\n    }\r\n\r\n    return \"not-handled\";\r\n  }\r\n  componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .get(`/admin/getone_term_cond/${id}`)\r\n      .then((response) => {\r\n        console.log(response.data.data.desc);\r\n        this.setState({\r\n          desc: response.data.data.desc,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let { id } = this.props.match.params;\r\n    console.log(id);\r\n    axiosConfig\r\n      .post(`/admin/edit_term_cond/${id}`, this.state)\r\n      .then((response) => {\r\n        console.log(response);\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n    return (\r\n      <Card>\r\n        <Row className=\"m-2\">\r\n          <Col>\r\n            <h1 col-sm-6 className=\"float-left\">\r\n              Edit Notification\r\n            </h1>\r\n          </Col>\r\n          <Col>\r\n            <Route\r\n              render={({ history }) => (\r\n                <Button\r\n                  className=\" btn btn-danger float-right\"\r\n                  onClick={() => history.push(\"/app/trade/generalNotifList\")}\r\n                >\r\n                  Back\r\n                </Button>\r\n              )}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <CardBody>\r\n          <Form onSubmit={this.submitHandler}>\r\n            <Row>\r\n              <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                <Label>Title</Label>\r\n                <Input\r\n                  required\r\n                  type=\"text\"\r\n                  name=\"value\"\r\n                  placeholder=\"Title\"\r\n                  value={this.state.value}\r\n                  onChange={this.changeHandler}\r\n                ></Input>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                <Label>Image</Label>\r\n                <Input\r\n                  required\r\n                  type=\"file\"\r\n                  name=\"value\"\r\n                  value={this.state.value}\r\n                  onChange={this.changeHandler}\r\n                ></Input>\r\n              </Col>\r\n            </Row>\r\n            <Editor\r\n              editorState={editorState}\r\n              handleKeyCommand={this.handleKeyCommand}\r\n              onEditorStateChange={this.onEditorStateChange}\r\n              toolbarClassName=\"demo-toolbar-absolute\"\r\n              wrapperClassName=\"demo-wrapper\"\r\n              editorClassName=\"demo-editor\"\r\n              toolbar={{\r\n                options: [\"inline\", \"blockType\", \"fontSize\", \"fontFamily\"],\r\n                inline: {\r\n                  options: [\r\n                    \"bold\",\r\n                    \"italic\",\r\n                    \"underline\",\r\n                    \"strikethrough\",\r\n                    \"monospace\",\r\n                  ],\r\n                  bold: { className: \"bordered-option-classname\" },\r\n                  italic: { className: \"bordered-option-classname\" },\r\n                  underline: { className: \"bordered-option-classname\" },\r\n                  strikethrough: { className: \"bordered-option-classname\" },\r\n                  code: { className: \"bordered-option-classname\" },\r\n                },\r\n                blockType: {\r\n                  className: \"bordered-option-classname\",\r\n                },\r\n                fontSize: {\r\n                  className: \"bordered-option-classname\",\r\n                },\r\n                fontFamily: {\r\n                  className: \"bordered-option-classname\",\r\n                },\r\n              }}\r\n            />\r\n            <br />\r\n            <Button color=\"primary\">Submit</Button>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default EditNotification;\r\n"],"sourceRoot":""}